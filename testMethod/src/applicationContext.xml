<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 配置数据库 -->
	<context:component-scan base-package="com.mybatisMe.Dao.Impl"/>
	
	<context:property-placeholder
		location="classpath:databaseResource.properties" />
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${mysql.driver}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="user" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<property name="minPoolSize">    
            <value>5</value>    
        </property>    
     
 		<!--连接池中保留的最大连接数。Default: 15 -->    
        <property name="maxPoolSize">    
            <value>30</value>    
        </property>    
     
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->    
        <property name="initialPoolSize">    
            <value>10</value>    
        </property>    
     
 		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->    
        <property name="maxIdleTime">    
            <value>60</value>    
        </property>    
	</bean>

	<!-- 动态代理实现 DAO接口所在包名，Spring会自动查找其下的类 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		需要扫描的dao层
		<property name="basePackage" value="com.mybatisMe.Dao" />
		引入上面的sqlSessionFactory
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>

	创建SqlSessionFactory,同时指定数据源 这里使用的并不是SqlSessionFactoryBuilder，而是使用的Mybatis-spring整 
		合jar中的org.mybatis.spring.SqlSessionFactoryBean，并且通过configLocation配置Mybatis的配置文件
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		将数据源引入进来
		<property name="dataSource" ref="dataSource" />
		mybaits的配置文件
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		自动扫描mapper文件，实体的映射文件位置
		<property name="mapperLocations"
			value="classpath:com/mybatisMe/mapper/*.xml" />
		自动扫描需要定义类别名的包，将包内的JAVA类的类名作为类别名 可以不配 该别名的作用就是在之后mybatis中要用到该类的时候，可以省略之前 
			包名+类名 的方式，直接用 类名即可
		<property name="typeAliasesPackage" value="com.shadow.*.model" />
	</bean> -->
</beans>
